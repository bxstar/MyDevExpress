//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.1。
// 
namespace TaoBaoDataServer.WinClientData.BusinessLayer.WService
{
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "WebServiceForKeywordForecastSoap", Namespace = "http://tempuri.org/")]
    public partial class WebServiceForKeywordForecast : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback KeywordForecastCacheOperationCompleted;

        private System.Threading.SendOrPostCallback KeywordBaseCacheOperationCompleted;

        private System.Threading.SendOrPostCallback KeywordBaseLongTimeCacheOperationCompleted;

        private System.Threading.SendOrPostCallback GetKeywordBaseLongTimeCacheOperationCompleted;

        private System.Threading.SendOrPostCallback GetAdgroupUseWordOperationCompleted;

        private System.Threading.SendOrPostCallback SetAdgroupUseWordOperationCompleted;

        private System.Threading.SendOrPostCallback GetCatecastKeysCountOperationCompleted;

        private System.Threading.SendOrPostCallback GetBaseKeysCountOperationCompleted;

        private System.Threading.SendOrPostCallback GetValueOperationCompleted;

        private System.Threading.SendOrPostCallback SetValueOperationCompleted;

        private System.Threading.SendOrPostCallback GetValueTimeOutOperationCompleted;

        private System.Threading.SendOrPostCallback SetValueTimeOutOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveKeyOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllKeysOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllKeysCountOperationCompleted;

        private System.Threading.SendOrPostCallback GetCountByKeyOperationCompleted;

        private System.Threading.SendOrPostCallback BgSaveOperationCompleted;

        private System.Threading.SendOrPostCallback GetCatsFullInfoOnlineOperationCompleted;

        private System.Threading.SendOrPostCallback GetItemCatsOnlineOperationCompleted;

        private System.Threading.SendOrPostCallback GetCatTopKeywordOperationCompleted;

        private System.Threading.SendOrPostCallback GetCatsdataOperationCompleted;

        private System.Threading.SendOrPostCallback GetItemInfoCacheOperationCompleted;

        private System.Threading.SendOrPostCallback GetUserOnlineItemsOperationCompleted;

        private System.Threading.SendOrPostCallback GetWordsDataCacheOperationCompleted;

        private System.Threading.SendOrPostCallback GetWordsSubDataCacheOperationCompleted;

        private System.Threading.SendOrPostCallback GetRelatedwordsByKeywordOperationCompleted;

        private System.Threading.SendOrPostCallback GetIsOutPutInfoLogOperationCompleted;

        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;

        /// <remarks/>
        public WebServiceForKeywordForecast()
        {
            this.Url = "http://ci.taokuaiche.com/WebServiceForKeywordForecast.asmx";
        }

        /// <remarks/>
        public event KeywordForecastCacheCompletedEventHandler KeywordForecastCacheCompleted;

        /// <remarks/>
        public event KeywordBaseCacheCompletedEventHandler KeywordBaseCacheCompleted;

        /// <remarks/>
        public event KeywordBaseLongTimeCacheCompletedEventHandler KeywordBaseLongTimeCacheCompleted;

        /// <remarks/>
        public event GetKeywordBaseLongTimeCacheCompletedEventHandler GetKeywordBaseLongTimeCacheCompleted;

        /// <remarks/>
        public event GetAdgroupUseWordCompletedEventHandler GetAdgroupUseWordCompleted;

        /// <remarks/>
        public event SetAdgroupUseWordCompletedEventHandler SetAdgroupUseWordCompleted;

        /// <remarks/>
        public event GetCatecastKeysCountCompletedEventHandler GetCatecastKeysCountCompleted;

        /// <remarks/>
        public event GetBaseKeysCountCompletedEventHandler GetBaseKeysCountCompleted;

        /// <remarks/>
        public event GetValueCompletedEventHandler GetValueCompleted;

        /// <remarks/>
        public event SetValueCompletedEventHandler SetValueCompleted;

        /// <remarks/>
        public event GetValueTimeOutCompletedEventHandler GetValueTimeOutCompleted;

        /// <remarks/>
        public event SetValueTimeOutCompletedEventHandler SetValueTimeOutCompleted;

        /// <remarks/>
        public event RemoveKeyCompletedEventHandler RemoveKeyCompleted;

        /// <remarks/>
        public event GetAllKeysCompletedEventHandler GetAllKeysCompleted;

        /// <remarks/>
        public event GetAllKeysCountCompletedEventHandler GetAllKeysCountCompleted;

        /// <remarks/>
        public event GetCountByKeyCompletedEventHandler GetCountByKeyCompleted;

        /// <remarks/>
        public event BgSaveCompletedEventHandler BgSaveCompleted;

        /// <remarks/>
        public event GetCatsFullInfoOnlineCompletedEventHandler GetCatsFullInfoOnlineCompleted;

        /// <remarks/>
        public event GetItemCatsOnlineCompletedEventHandler GetItemCatsOnlineCompleted;

        /// <remarks/>
        public event GetCatTopKeywordCompletedEventHandler GetCatTopKeywordCompleted;

        /// <remarks/>
        public event GetCatsdataCompletedEventHandler GetCatsdataCompleted;

        /// <remarks/>
        public event GetItemInfoCacheCompletedEventHandler GetItemInfoCacheCompleted;

        /// <remarks/>
        public event GetUserOnlineItemsCompletedEventHandler GetUserOnlineItemsCompleted;

        /// <remarks/>
        public event GetWordsDataCacheCompletedEventHandler GetWordsDataCacheCompleted;

        /// <remarks/>
        public event GetWordsSubDataCacheCompletedEventHandler GetWordsSubDataCacheCompleted;

        /// <remarks/>
        public event GetRelatedwordsByKeywordCompletedEventHandler GetRelatedwordsByKeywordCompleted;

        /// <remarks/>
        public event GetIsOutPutInfoLogCompletedEventHandler GetIsOutPutInfoLogCompleted;

        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KeywordForecastCache", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityKeywordCategoryForecast[] KeywordForecastCache(string strKeywords)
        {
            object[] results = this.Invoke("KeywordForecastCache", new object[] {
                        strKeywords});
            return ((EntityKeywordCategoryForecast[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginKeywordForecastCache(string strKeywords, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("KeywordForecastCache", new object[] {
                        strKeywords}, callback, asyncState);
        }

        /// <remarks/>
        public EntityKeywordCategoryForecast[] EndKeywordForecastCache(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((EntityKeywordCategoryForecast[])(results[0]));
        }

        /// <remarks/>
        public void KeywordForecastCacheAsync(string strKeywords)
        {
            this.KeywordForecastCacheAsync(strKeywords, null);
        }

        /// <remarks/>
        public void KeywordForecastCacheAsync(string strKeywords, object userState)
        {
            if ((this.KeywordForecastCacheOperationCompleted == null))
            {
                this.KeywordForecastCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeywordForecastCacheOperationCompleted);
            }
            this.InvokeAsync("KeywordForecastCache", new object[] {
                        strKeywords}, this.KeywordForecastCacheOperationCompleted, userState);
        }

        private void OnKeywordForecastCacheOperationCompleted(object arg)
        {
            if ((this.KeywordForecastCacheCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeywordForecastCacheCompleted(this, new KeywordForecastCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KeywordBaseCache", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityWordBase[] KeywordBaseCache(string strKeywords)
        {
            object[] results = this.Invoke("KeywordBaseCache", new object[] {
                        strKeywords});
            return ((EntityWordBase[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginKeywordBaseCache(string strKeywords, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("KeywordBaseCache", new object[] {
                        strKeywords}, callback, asyncState);
        }

        /// <remarks/>
        public EntityWordBase[] EndKeywordBaseCache(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((EntityWordBase[])(results[0]));
        }

        /// <remarks/>
        public void KeywordBaseCacheAsync(string strKeywords)
        {
            this.KeywordBaseCacheAsync(strKeywords, null);
        }

        /// <remarks/>
        public void KeywordBaseCacheAsync(string strKeywords, object userState)
        {
            if ((this.KeywordBaseCacheOperationCompleted == null))
            {
                this.KeywordBaseCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeywordBaseCacheOperationCompleted);
            }
            this.InvokeAsync("KeywordBaseCache", new object[] {
                        strKeywords}, this.KeywordBaseCacheOperationCompleted, userState);
        }

        private void OnKeywordBaseCacheOperationCompleted(object arg)
        {
            if ((this.KeywordBaseCacheCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeywordBaseCacheCompleted(this, new KeywordBaseCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KeywordBaseLongTimeCache", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityWordBase[] KeywordBaseLongTimeCache(string strKeywords)
        {
            object[] results = this.Invoke("KeywordBaseLongTimeCache", new object[] {
                        strKeywords});
            return ((EntityWordBase[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginKeywordBaseLongTimeCache(string strKeywords, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("KeywordBaseLongTimeCache", new object[] {
                        strKeywords}, callback, asyncState);
        }

        /// <remarks/>
        public EntityWordBase[] EndKeywordBaseLongTimeCache(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((EntityWordBase[])(results[0]));
        }

        /// <remarks/>
        public void KeywordBaseLongTimeCacheAsync(string strKeywords)
        {
            this.KeywordBaseLongTimeCacheAsync(strKeywords, null);
        }

        /// <remarks/>
        public void KeywordBaseLongTimeCacheAsync(string strKeywords, object userState)
        {
            if ((this.KeywordBaseLongTimeCacheOperationCompleted == null))
            {
                this.KeywordBaseLongTimeCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeywordBaseLongTimeCacheOperationCompleted);
            }
            this.InvokeAsync("KeywordBaseLongTimeCache", new object[] {
                        strKeywords}, this.KeywordBaseLongTimeCacheOperationCompleted, userState);
        }

        private void OnKeywordBaseLongTimeCacheOperationCompleted(object arg)
        {
            if ((this.KeywordBaseLongTimeCacheCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeywordBaseLongTimeCacheCompleted(this, new KeywordBaseLongTimeCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKeywordBaseLongTimeCache", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityWordBase[] GetKeywordBaseLongTimeCache(string nick, string itemId, string strKeywords)
        {
            object[] results = this.Invoke("GetKeywordBaseLongTimeCache", new object[] {
                        nick,
                        itemId,
                        strKeywords});
            return ((EntityWordBase[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetKeywordBaseLongTimeCache(string nick, string itemId, string strKeywords, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetKeywordBaseLongTimeCache", new object[] {
                        nick,
                        itemId,
                        strKeywords}, callback, asyncState);
        }

        /// <remarks/>
        public EntityWordBase[] EndGetKeywordBaseLongTimeCache(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((EntityWordBase[])(results[0]));
        }

        /// <remarks/>
        public void GetKeywordBaseLongTimeCacheAsync(string nick, string itemId, string strKeywords)
        {
            this.GetKeywordBaseLongTimeCacheAsync(nick, itemId, strKeywords, null);
        }

        /// <remarks/>
        public void GetKeywordBaseLongTimeCacheAsync(string nick, string itemId, string strKeywords, object userState)
        {
            if ((this.GetKeywordBaseLongTimeCacheOperationCompleted == null))
            {
                this.GetKeywordBaseLongTimeCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeywordBaseLongTimeCacheOperationCompleted);
            }
            this.InvokeAsync("GetKeywordBaseLongTimeCache", new object[] {
                        nick,
                        itemId,
                        strKeywords}, this.GetKeywordBaseLongTimeCacheOperationCompleted, userState);
        }

        private void OnGetKeywordBaseLongTimeCacheOperationCompleted(object arg)
        {
            if ((this.GetKeywordBaseLongTimeCacheCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeywordBaseLongTimeCacheCompleted(this, new GetKeywordBaseLongTimeCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdgroupUseWord", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAdgroupUseWord(long adgroupId)
        {
            object[] results = this.Invoke("GetAdgroupUseWord", new object[] {
                        adgroupId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAdgroupUseWord(long adgroupId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAdgroupUseWord", new object[] {
                        adgroupId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAdgroupUseWord(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAdgroupUseWordAsync(long adgroupId)
        {
            this.GetAdgroupUseWordAsync(adgroupId, null);
        }

        /// <remarks/>
        public void GetAdgroupUseWordAsync(long adgroupId, object userState)
        {
            if ((this.GetAdgroupUseWordOperationCompleted == null))
            {
                this.GetAdgroupUseWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdgroupUseWordOperationCompleted);
            }
            this.InvokeAsync("GetAdgroupUseWord", new object[] {
                        adgroupId}, this.GetAdgroupUseWordOperationCompleted, userState);
        }

        private void OnGetAdgroupUseWordOperationCompleted(object arg)
        {
            if ((this.GetAdgroupUseWordCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdgroupUseWordCompleted(this, new GetAdgroupUseWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAdgroupUseWord", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetAdgroupUseWord(long adgroupId, string strKeywords)
        {
            object[] results = this.Invoke("SetAdgroupUseWord", new object[] {
                        adgroupId,
                        strKeywords});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetAdgroupUseWord(long adgroupId, string strKeywords, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetAdgroupUseWord", new object[] {
                        adgroupId,
                        strKeywords}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndSetAdgroupUseWord(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void SetAdgroupUseWordAsync(long adgroupId, string strKeywords)
        {
            this.SetAdgroupUseWordAsync(adgroupId, strKeywords, null);
        }

        /// <remarks/>
        public void SetAdgroupUseWordAsync(long adgroupId, string strKeywords, object userState)
        {
            if ((this.SetAdgroupUseWordOperationCompleted == null))
            {
                this.SetAdgroupUseWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAdgroupUseWordOperationCompleted);
            }
            this.InvokeAsync("SetAdgroupUseWord", new object[] {
                        adgroupId,
                        strKeywords}, this.SetAdgroupUseWordOperationCompleted, userState);
        }

        private void OnSetAdgroupUseWordOperationCompleted(object arg)
        {
            if ((this.SetAdgroupUseWordCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAdgroupUseWordCompleted(this, new SetAdgroupUseWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCatecastKeysCount", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCatecastKeysCount()
        {
            object[] results = this.Invoke("GetCatecastKeysCount", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCatecastKeysCount(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCatecastKeysCount", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCatecastKeysCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCatecastKeysCountAsync()
        {
            this.GetCatecastKeysCountAsync(null);
        }

        /// <remarks/>
        public void GetCatecastKeysCountAsync(object userState)
        {
            if ((this.GetCatecastKeysCountOperationCompleted == null))
            {
                this.GetCatecastKeysCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatecastKeysCountOperationCompleted);
            }
            this.InvokeAsync("GetCatecastKeysCount", new object[0], this.GetCatecastKeysCountOperationCompleted, userState);
        }

        private void OnGetCatecastKeysCountOperationCompleted(object arg)
        {
            if ((this.GetCatecastKeysCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatecastKeysCountCompleted(this, new GetCatecastKeysCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBaseKeysCount", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBaseKeysCount()
        {
            object[] results = this.Invoke("GetBaseKeysCount", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetBaseKeysCount(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetBaseKeysCount", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetBaseKeysCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetBaseKeysCountAsync()
        {
            this.GetBaseKeysCountAsync(null);
        }

        /// <remarks/>
        public void GetBaseKeysCountAsync(object userState)
        {
            if ((this.GetBaseKeysCountOperationCompleted == null))
            {
                this.GetBaseKeysCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBaseKeysCountOperationCompleted);
            }
            this.InvokeAsync("GetBaseKeysCount", new object[0], this.GetBaseKeysCountOperationCompleted, userState);
        }

        private void OnGetBaseKeysCountOperationCompleted(object arg)
        {
            if ((this.GetBaseKeysCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBaseKeysCountCompleted(this, new GetBaseKeysCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetValue", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetValue(string key)
        {
            object[] results = this.Invoke("GetValue", new object[] {
                        key});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetValue(string key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetValue", new object[] {
                        key}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetValue(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetValueAsync(string key)
        {
            this.GetValueAsync(key, null);
        }

        /// <remarks/>
        public void GetValueAsync(string key, object userState)
        {
            if ((this.GetValueOperationCompleted == null))
            {
                this.GetValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValueOperationCompleted);
            }
            this.InvokeAsync("GetValue", new object[] {
                        key}, this.GetValueOperationCompleted, userState);
        }

        private void OnGetValueOperationCompleted(object arg)
        {
            if ((this.GetValueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValueCompleted(this, new GetValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetValue", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetValue(string key, string value)
        {
            object[] results = this.Invoke("SetValue", new object[] {
                        key,
                        value});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetValue(string key, string value, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetValue", new object[] {
                        key,
                        value}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndSetValue(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void SetValueAsync(string key, string value)
        {
            this.SetValueAsync(key, value, null);
        }

        /// <remarks/>
        public void SetValueAsync(string key, string value, object userState)
        {
            if ((this.SetValueOperationCompleted == null))
            {
                this.SetValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetValueOperationCompleted);
            }
            this.InvokeAsync("SetValue", new object[] {
                        key,
                        value}, this.SetValueOperationCompleted, userState);
        }

        private void OnSetValueOperationCompleted(object arg)
        {
            if ((this.SetValueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetValueCompleted(this, new SetValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetValueTimeOut", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetValueTimeOut(string key)
        {
            object[] results = this.Invoke("GetValueTimeOut", new object[] {
                        key});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetValueTimeOut(string key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetValueTimeOut", new object[] {
                        key}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetValueTimeOut(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetValueTimeOutAsync(string key)
        {
            this.GetValueTimeOutAsync(key, null);
        }

        /// <remarks/>
        public void GetValueTimeOutAsync(string key, object userState)
        {
            if ((this.GetValueTimeOutOperationCompleted == null))
            {
                this.GetValueTimeOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValueTimeOutOperationCompleted);
            }
            this.InvokeAsync("GetValueTimeOut", new object[] {
                        key}, this.GetValueTimeOutOperationCompleted, userState);
        }

        private void OnGetValueTimeOutOperationCompleted(object arg)
        {
            if ((this.GetValueTimeOutCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValueTimeOutCompleted(this, new GetValueTimeOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetValueTimeOut", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetValueTimeOut(string key, string value, int timeOut)
        {
            object[] results = this.Invoke("SetValueTimeOut", new object[] {
                        key,
                        value,
                        timeOut});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetValueTimeOut(string key, string value, int timeOut, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetValueTimeOut", new object[] {
                        key,
                        value,
                        timeOut}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndSetValueTimeOut(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void SetValueTimeOutAsync(string key, string value, int timeOut)
        {
            this.SetValueTimeOutAsync(key, value, timeOut, null);
        }

        /// <remarks/>
        public void SetValueTimeOutAsync(string key, string value, int timeOut, object userState)
        {
            if ((this.SetValueTimeOutOperationCompleted == null))
            {
                this.SetValueTimeOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetValueTimeOutOperationCompleted);
            }
            this.InvokeAsync("SetValueTimeOut", new object[] {
                        key,
                        value,
                        timeOut}, this.SetValueTimeOutOperationCompleted, userState);
        }

        private void OnSetValueTimeOutOperationCompleted(object arg)
        {
            if ((this.SetValueTimeOutCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetValueTimeOutCompleted(this, new SetValueTimeOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveKey", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveKey(string key)
        {
            object[] results = this.Invoke("RemoveKey", new object[] {
                        key});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveKey(string key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveKey", new object[] {
                        key}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndRemoveKey(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void RemoveKeyAsync(string key)
        {
            this.RemoveKeyAsync(key, null);
        }

        /// <remarks/>
        public void RemoveKeyAsync(string key, object userState)
        {
            if ((this.RemoveKeyOperationCompleted == null))
            {
                this.RemoveKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveKeyOperationCompleted);
            }
            this.InvokeAsync("RemoveKey", new object[] {
                        key}, this.RemoveKeyOperationCompleted, userState);
        }

        private void OnRemoveKeyOperationCompleted(object arg)
        {
            if ((this.RemoveKeyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveKeyCompleted(this, new RemoveKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllKeys", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAllKeys(string key)
        {
            object[] results = this.Invoke("GetAllKeys", new object[] {
                        key});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllKeys(string key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllKeys", new object[] {
                        key}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndGetAllKeys(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void GetAllKeysAsync(string key)
        {
            this.GetAllKeysAsync(key, null);
        }

        /// <remarks/>
        public void GetAllKeysAsync(string key, object userState)
        {
            if ((this.GetAllKeysOperationCompleted == null))
            {
                this.GetAllKeysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllKeysOperationCompleted);
            }
            this.InvokeAsync("GetAllKeys", new object[] {
                        key}, this.GetAllKeysOperationCompleted, userState);
        }

        private void OnGetAllKeysOperationCompleted(object arg)
        {
            if ((this.GetAllKeysCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllKeysCompleted(this, new GetAllKeysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllKeysCount", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllKeysCount()
        {
            object[] results = this.Invoke("GetAllKeysCount", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllKeysCount(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllKeysCount", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAllKeysCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAllKeysCountAsync()
        {
            this.GetAllKeysCountAsync(null);
        }

        /// <remarks/>
        public void GetAllKeysCountAsync(object userState)
        {
            if ((this.GetAllKeysCountOperationCompleted == null))
            {
                this.GetAllKeysCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllKeysCountOperationCompleted);
            }
            this.InvokeAsync("GetAllKeysCount", new object[0], this.GetAllKeysCountOperationCompleted, userState);
        }

        private void OnGetAllKeysCountOperationCompleted(object arg)
        {
            if ((this.GetAllKeysCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllKeysCountCompleted(this, new GetAllKeysCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountByKey", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCountByKey(string key)
        {
            object[] results = this.Invoke("GetCountByKey", new object[] {
                        key});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCountByKey(string key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCountByKey", new object[] {
                        key}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCountByKey(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCountByKeyAsync(string key)
        {
            this.GetCountByKeyAsync(key, null);
        }

        /// <remarks/>
        public void GetCountByKeyAsync(string key, object userState)
        {
            if ((this.GetCountByKeyOperationCompleted == null))
            {
                this.GetCountByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountByKeyOperationCompleted);
            }
            this.InvokeAsync("GetCountByKey", new object[] {
                        key}, this.GetCountByKeyOperationCompleted, userState);
        }

        private void OnGetCountByKeyOperationCompleted(object arg)
        {
            if ((this.GetCountByKeyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountByKeyCompleted(this, new GetCountByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BgSave", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BgSave()
        {
            this.Invoke("BgSave", new object[0]);
        }

        /// <remarks/>
        public System.IAsyncResult BeginBgSave(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BgSave", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public void EndBgSave(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void BgSaveAsync()
        {
            this.BgSaveAsync(null);
        }

        /// <remarks/>
        public void BgSaveAsync(object userState)
        {
            if ((this.BgSaveOperationCompleted == null))
            {
                this.BgSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBgSaveOperationCompleted);
            }
            this.InvokeAsync("BgSave", new object[0], this.BgSaveOperationCompleted, userState);
        }

        private void OnBgSaveOperationCompleted(object arg)
        {
            if ((this.BgSaveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BgSaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCatsFullInfoOnline", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCatsFullInfoOnline(string access_token, string catLevel, string categoryIds)
        {
            object[] results = this.Invoke("GetCatsFullInfoOnline", new object[] {
                        access_token,
                        catLevel,
                        categoryIds});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCatsFullInfoOnline(string access_token, string catLevel, string categoryIds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCatsFullInfoOnline", new object[] {
                        access_token,
                        catLevel,
                        categoryIds}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCatsFullInfoOnline(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCatsFullInfoOnlineAsync(string access_token, string catLevel, string categoryIds)
        {
            this.GetCatsFullInfoOnlineAsync(access_token, catLevel, categoryIds, null);
        }

        /// <remarks/>
        public void GetCatsFullInfoOnlineAsync(string access_token, string catLevel, string categoryIds, object userState)
        {
            if ((this.GetCatsFullInfoOnlineOperationCompleted == null))
            {
                this.GetCatsFullInfoOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatsFullInfoOnlineOperationCompleted);
            }
            this.InvokeAsync("GetCatsFullInfoOnline", new object[] {
                        access_token,
                        catLevel,
                        categoryIds}, this.GetCatsFullInfoOnlineOperationCompleted, userState);
        }

        private void OnGetCatsFullInfoOnlineOperationCompleted(object arg)
        {
            if ((this.GetCatsFullInfoOnlineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatsFullInfoOnlineCompleted(this, new GetCatsFullInfoOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemCatsOnline", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemCatsOnline(string access_token, string categoryIds)
        {
            object[] results = this.Invoke("GetItemCatsOnline", new object[] {
                        access_token,
                        categoryIds});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetItemCatsOnline(string access_token, string categoryIds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetItemCatsOnline", new object[] {
                        access_token,
                        categoryIds}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetItemCatsOnline(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetItemCatsOnlineAsync(string access_token, string categoryIds)
        {
            this.GetItemCatsOnlineAsync(access_token, categoryIds, null);
        }

        /// <remarks/>
        public void GetItemCatsOnlineAsync(string access_token, string categoryIds, object userState)
        {
            if ((this.GetItemCatsOnlineOperationCompleted == null))
            {
                this.GetItemCatsOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemCatsOnlineOperationCompleted);
            }
            this.InvokeAsync("GetItemCatsOnline", new object[] {
                        access_token,
                        categoryIds}, this.GetItemCatsOnlineOperationCompleted, userState);
        }

        private void OnGetItemCatsOnlineOperationCompleted(object arg)
        {
            if ((this.GetItemCatsOnlineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemCatsOnlineCompleted(this, new GetItemCatsOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCatTopKeyword", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCatTopKeyword(string access_token, string categoryId)
        {
            object[] results = this.Invoke("GetCatTopKeyword", new object[] {
                        access_token,
                        categoryId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCatTopKeyword(string access_token, string categoryId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCatTopKeyword", new object[] {
                        access_token,
                        categoryId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCatTopKeyword(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCatTopKeywordAsync(string access_token, string categoryId)
        {
            this.GetCatTopKeywordAsync(access_token, categoryId, null);
        }

        /// <remarks/>
        public void GetCatTopKeywordAsync(string access_token, string categoryId, object userState)
        {
            if ((this.GetCatTopKeywordOperationCompleted == null))
            {
                this.GetCatTopKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatTopKeywordOperationCompleted);
            }
            this.InvokeAsync("GetCatTopKeyword", new object[] {
                        access_token,
                        categoryId}, this.GetCatTopKeywordOperationCompleted, userState);
        }

        private void OnGetCatTopKeywordOperationCompleted(object arg)
        {
            if ((this.GetCatTopKeywordCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatTopKeywordCompleted(this, new GetCatTopKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCatsdata", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCatsdata(string access_token, string categoryIds, string startDate, string endDate)
        {
            object[] results = this.Invoke("GetCatsdata", new object[] {
                        access_token,
                        categoryIds,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCatsdata(string access_token, string categoryIds, string startDate, string endDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCatsdata", new object[] {
                        access_token,
                        categoryIds,
                        startDate,
                        endDate}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCatsdata(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCatsdataAsync(string access_token, string categoryIds, string startDate, string endDate)
        {
            this.GetCatsdataAsync(access_token, categoryIds, startDate, endDate, null);
        }

        /// <remarks/>
        public void GetCatsdataAsync(string access_token, string categoryIds, string startDate, string endDate, object userState)
        {
            if ((this.GetCatsdataOperationCompleted == null))
            {
                this.GetCatsdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatsdataOperationCompleted);
            }
            this.InvokeAsync("GetCatsdata", new object[] {
                        access_token,
                        categoryIds,
                        startDate,
                        endDate}, this.GetCatsdataOperationCompleted, userState);
        }

        private void OnGetCatsdataOperationCompleted(object arg)
        {
            if ((this.GetCatsdataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatsdataCompleted(this, new GetCatsdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemInfoCache", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemInfoCache(string access_token, string itemIdOrUrl)
        {
            object[] results = this.Invoke("GetItemInfoCache", new object[] {
                        access_token,
                        itemIdOrUrl});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetItemInfoCache(string access_token, string itemIdOrUrl, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetItemInfoCache", new object[] {
                        access_token,
                        itemIdOrUrl}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetItemInfoCache(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetItemInfoCacheAsync(string access_token, string itemIdOrUrl)
        {
            this.GetItemInfoCacheAsync(access_token, itemIdOrUrl, null);
        }

        /// <remarks/>
        public void GetItemInfoCacheAsync(string access_token, string itemIdOrUrl, object userState)
        {
            if ((this.GetItemInfoCacheOperationCompleted == null))
            {
                this.GetItemInfoCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemInfoCacheOperationCompleted);
            }
            this.InvokeAsync("GetItemInfoCache", new object[] {
                        access_token,
                        itemIdOrUrl}, this.GetItemInfoCacheOperationCompleted, userState);
        }

        private void OnGetItemInfoCacheOperationCompleted(object arg)
        {
            if ((this.GetItemInfoCacheCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemInfoCacheCompleted(this, new GetItemInfoCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserOnlineItems", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserOnlineItems(string access_token, string nick, string session, string apptype, bool isFromCache)
        {
            object[] results = this.Invoke("GetUserOnlineItems", new object[] {
                        access_token,
                        nick,
                        session,
                        apptype,
                        isFromCache});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetUserOnlineItems(string access_token, string nick, string session, string apptype, bool isFromCache, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetUserOnlineItems", new object[] {
                        access_token,
                        nick,
                        session,
                        apptype,
                        isFromCache}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetUserOnlineItems(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetUserOnlineItemsAsync(string access_token, string nick, string session, string apptype, bool isFromCache)
        {
            this.GetUserOnlineItemsAsync(access_token, nick, session, apptype, isFromCache, null);
        }

        /// <remarks/>
        public void GetUserOnlineItemsAsync(string access_token, string nick, string session, string apptype, bool isFromCache, object userState)
        {
            if ((this.GetUserOnlineItemsOperationCompleted == null))
            {
                this.GetUserOnlineItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOnlineItemsOperationCompleted);
            }
            this.InvokeAsync("GetUserOnlineItems", new object[] {
                        access_token,
                        nick,
                        session,
                        apptype,
                        isFromCache}, this.GetUserOnlineItemsOperationCompleted, userState);
        }

        private void OnGetUserOnlineItemsOperationCompleted(object arg)
        {
            if ((this.GetUserOnlineItemsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserOnlineItemsCompleted(this, new GetUserOnlineItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWordsDataCache", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWordsDataCache(string access_token, string keywords, string startDate, string endDate)
        {
            object[] results = this.Invoke("GetWordsDataCache", new object[] {
                        access_token,
                        keywords,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetWordsDataCache(string access_token, string keywords, string startDate, string endDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetWordsDataCache", new object[] {
                        access_token,
                        keywords,
                        startDate,
                        endDate}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetWordsDataCache(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetWordsDataCacheAsync(string access_token, string keywords, string startDate, string endDate)
        {
            this.GetWordsDataCacheAsync(access_token, keywords, startDate, endDate, null);
        }

        /// <remarks/>
        public void GetWordsDataCacheAsync(string access_token, string keywords, string startDate, string endDate, object userState)
        {
            if ((this.GetWordsDataCacheOperationCompleted == null))
            {
                this.GetWordsDataCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWordsDataCacheOperationCompleted);
            }
            this.InvokeAsync("GetWordsDataCache", new object[] {
                        access_token,
                        keywords,
                        startDate,
                        endDate}, this.GetWordsDataCacheOperationCompleted, userState);
        }

        private void OnGetWordsDataCacheOperationCompleted(object arg)
        {
            if ((this.GetWordsDataCacheCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWordsDataCacheCompleted(this, new GetWordsDataCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWordsSubDataCache", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWordsSubDataCache(string access_token, string keywords, string startDate, string endDate)
        {
            object[] results = this.Invoke("GetWordsSubDataCache", new object[] {
                        access_token,
                        keywords,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetWordsSubDataCache(string access_token, string keywords, string startDate, string endDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetWordsSubDataCache", new object[] {
                        access_token,
                        keywords,
                        startDate,
                        endDate}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetWordsSubDataCache(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetWordsSubDataCacheAsync(string access_token, string keywords, string startDate, string endDate)
        {
            this.GetWordsSubDataCacheAsync(access_token, keywords, startDate, endDate, null);
        }

        /// <remarks/>
        public void GetWordsSubDataCacheAsync(string access_token, string keywords, string startDate, string endDate, object userState)
        {
            if ((this.GetWordsSubDataCacheOperationCompleted == null))
            {
                this.GetWordsSubDataCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWordsSubDataCacheOperationCompleted);
            }
            this.InvokeAsync("GetWordsSubDataCache", new object[] {
                        access_token,
                        keywords,
                        startDate,
                        endDate}, this.GetWordsSubDataCacheOperationCompleted, userState);
        }

        private void OnGetWordsSubDataCacheOperationCompleted(object arg)
        {
            if ((this.GetWordsSubDataCacheCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWordsSubDataCacheCompleted(this, new GetWordsSubDataCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedwordsByKeyword", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRelatedwordsByKeyword(string access_token, string keywords, long depth)
        {
            object[] results = this.Invoke("GetRelatedwordsByKeyword", new object[] {
                        access_token,
                        keywords,
                        depth});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetRelatedwordsByKeyword(string access_token, string keywords, long depth, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRelatedwordsByKeyword", new object[] {
                        access_token,
                        keywords,
                        depth}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetRelatedwordsByKeyword(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetRelatedwordsByKeywordAsync(string access_token, string keywords, long depth)
        {
            this.GetRelatedwordsByKeywordAsync(access_token, keywords, depth, null);
        }

        /// <remarks/>
        public void GetRelatedwordsByKeywordAsync(string access_token, string keywords, long depth, object userState)
        {
            if ((this.GetRelatedwordsByKeywordOperationCompleted == null))
            {
                this.GetRelatedwordsByKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelatedwordsByKeywordOperationCompleted);
            }
            this.InvokeAsync("GetRelatedwordsByKeyword", new object[] {
                        access_token,
                        keywords,
                        depth}, this.GetRelatedwordsByKeywordOperationCompleted, userState);
        }

        private void OnGetRelatedwordsByKeywordOperationCompleted(object arg)
        {
            if ((this.GetRelatedwordsByKeywordCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelatedwordsByKeywordCompleted(this, new GetRelatedwordsByKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIsOutPutInfoLog", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIsOutPutInfoLog()
        {
            object[] results = this.Invoke("GetIsOutPutInfoLog", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetIsOutPutInfoLog(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetIsOutPutInfoLog", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetIsOutPutInfoLog(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetIsOutPutInfoLogAsync()
        {
            this.GetIsOutPutInfoLogAsync(null);
        }

        /// <remarks/>
        public void GetIsOutPutInfoLogAsync(object userState)
        {
            if ((this.GetIsOutPutInfoLogOperationCompleted == null))
            {
                this.GetIsOutPutInfoLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIsOutPutInfoLogOperationCompleted);
            }
            this.InvokeAsync("GetIsOutPutInfoLog", new object[0], this.GetIsOutPutInfoLogOperationCompleted, userState);
        }

        private void OnGetIsOutPutInfoLogOperationCompleted(object arg)
        {
            if ((this.GetIsOutPutInfoLogCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIsOutPutInfoLogCompleted(this, new GetIsOutPutInfoLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld()
        {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("HelloWorld", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndHelloWorld(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void HelloWorldAsync()
        {
            this.HelloWorldAsync(null);
        }

        /// <remarks/>
        public void HelloWorldAsync(object userState)
        {
            if ((this.HelloWorldOperationCompleted == null))
            {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }

        private void OnHelloWorldOperationCompleted(object arg)
        {
            if ((this.HelloWorldCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class EntityKeywordCategoryForecast
    {

        private string categroy_wordField;

        private EntityCategoryInfo[] category_childField;

        /// <remarks/>
        public string categroy_word
        {
            get
            {
                return this.categroy_wordField;
            }
            set
            {
                this.categroy_wordField = value;
            }
        }

        /// <remarks/>
        public EntityCategoryInfo[] category_child
        {
            get
            {
                return this.category_childField;
            }
            set
            {
                this.category_childField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class EntityCategoryInfo
    {

        private string category_descField;

        private string category_path_idField;

        private long category_idField;

        private string category_nameField;

        private double scoreField;

        /// <remarks/>
        public string category_desc
        {
            get
            {
                return this.category_descField;
            }
            set
            {
                this.category_descField = value;
            }
        }

        /// <remarks/>
        public string category_path_id
        {
            get
            {
                return this.category_path_idField;
            }
            set
            {
                this.category_path_idField = value;
            }
        }

        /// <remarks/>
        public long category_id
        {
            get
            {
                return this.category_idField;
            }
            set
            {
                this.category_idField = value;
            }
        }

        /// <remarks/>
        public string category_name
        {
            get
            {
                return this.category_nameField;
            }
            set
            {
                this.category_nameField = value;
            }
        }

        /// <remarks/>
        public double score
        {
            get
            {
                return this.scoreField;
            }
            set
            {
                this.scoreField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class EntityBaseInfo
    {

        private long impressionField;

        private long clickField;

        private long competitionField;

        private long avg_priceField;

        private string ctrField;

        private long costField;

        private string rateField;

        private long directpayField;

        private long directpaycountField;

        private long favitemcountField;

        private long favshopcountField;

        private long totalfavcountField;

        private long indirectpayField;

        private long indirectpaycountField;

        private string roiField;

        private long totalpaycountField;

        private long totalpayField;

        private string dateField;

        /// <remarks/>
        public long impression
        {
            get
            {
                return this.impressionField;
            }
            set
            {
                this.impressionField = value;
            }
        }

        /// <remarks/>
        public long click
        {
            get
            {
                return this.clickField;
            }
            set
            {
                this.clickField = value;
            }
        }

        /// <remarks/>
        public long competition
        {
            get
            {
                return this.competitionField;
            }
            set
            {
                this.competitionField = value;
            }
        }

        /// <remarks/>
        public long avg_price
        {
            get
            {
                return this.avg_priceField;
            }
            set
            {
                this.avg_priceField = value;
            }
        }

        /// <remarks/>
        public string ctr
        {
            get
            {
                return this.ctrField;
            }
            set
            {
                this.ctrField = value;
            }
        }

        /// <remarks/>
        public long cost
        {
            get
            {
                return this.costField;
            }
            set
            {
                this.costField = value;
            }
        }

        /// <remarks/>
        public string rate
        {
            get
            {
                return this.rateField;
            }
            set
            {
                this.rateField = value;
            }
        }

        /// <remarks/>
        public long directpay
        {
            get
            {
                return this.directpayField;
            }
            set
            {
                this.directpayField = value;
            }
        }

        /// <remarks/>
        public long directpaycount
        {
            get
            {
                return this.directpaycountField;
            }
            set
            {
                this.directpaycountField = value;
            }
        }

        /// <remarks/>
        public long favitemcount
        {
            get
            {
                return this.favitemcountField;
            }
            set
            {
                this.favitemcountField = value;
            }
        }

        /// <remarks/>
        public long favshopcount
        {
            get
            {
                return this.favshopcountField;
            }
            set
            {
                this.favshopcountField = value;
            }
        }

        /// <remarks/>
        public long totalfavcount
        {
            get
            {
                return this.totalfavcountField;
            }
            set
            {
                this.totalfavcountField = value;
            }
        }

        /// <remarks/>
        public long indirectpay
        {
            get
            {
                return this.indirectpayField;
            }
            set
            {
                this.indirectpayField = value;
            }
        }

        /// <remarks/>
        public long indirectpaycount
        {
            get
            {
                return this.indirectpaycountField;
            }
            set
            {
                this.indirectpaycountField = value;
            }
        }

        /// <remarks/>
        public string roi
        {
            get
            {
                return this.roiField;
            }
            set
            {
                this.roiField = value;
            }
        }

        /// <remarks/>
        public long totalpaycount
        {
            get
            {
                return this.totalpaycountField;
            }
            set
            {
                this.totalpaycountField = value;
            }
        }

        /// <remarks/>
        public long totalpay
        {
            get
            {
                return this.totalpayField;
            }
            set
            {
                this.totalpayField = value;
            }
        }

        /// <remarks/>
        public string date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class EntityWordBase
    {

        private string wordField;

        private string word_area_perField;

        private string word_source_perField;

        private string word_hp_priceField;

        private EntityBaseInfo[] reord_baseField;

        /// <remarks/>
        public string word
        {
            get
            {
                return this.wordField;
            }
            set
            {
                this.wordField = value;
            }
        }

        /// <remarks/>
        public string word_area_per
        {
            get
            {
                return this.word_area_perField;
            }
            set
            {
                this.word_area_perField = value;
            }
        }

        /// <remarks/>
        public string word_source_per
        {
            get
            {
                return this.word_source_perField;
            }
            set
            {
                this.word_source_perField = value;
            }
        }

        /// <remarks/>
        public string word_hp_price
        {
            get
            {
                return this.word_hp_priceField;
            }
            set
            {
                this.word_hp_priceField = value;
            }
        }

        /// <remarks/>
        public EntityBaseInfo[] reord_base
        {
            get
            {
                return this.reord_baseField;
            }
            set
            {
                this.reord_baseField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void KeywordForecastCacheCompletedEventHandler(object sender, KeywordForecastCacheCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeywordForecastCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal KeywordForecastCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EntityKeywordCategoryForecast[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EntityKeywordCategoryForecast[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void KeywordBaseCacheCompletedEventHandler(object sender, KeywordBaseCacheCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeywordBaseCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal KeywordBaseCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EntityWordBase[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EntityWordBase[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void KeywordBaseLongTimeCacheCompletedEventHandler(object sender, KeywordBaseLongTimeCacheCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeywordBaseLongTimeCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal KeywordBaseLongTimeCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EntityWordBase[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EntityWordBase[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetKeywordBaseLongTimeCacheCompletedEventHandler(object sender, GetKeywordBaseLongTimeCacheCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeywordBaseLongTimeCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetKeywordBaseLongTimeCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EntityWordBase[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EntityWordBase[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetAdgroupUseWordCompletedEventHandler(object sender, GetAdgroupUseWordCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdgroupUseWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAdgroupUseWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SetAdgroupUseWordCompletedEventHandler(object sender, SetAdgroupUseWordCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAdgroupUseWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetAdgroupUseWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetCatecastKeysCountCompletedEventHandler(object sender, GetCatecastKeysCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCatecastKeysCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCatecastKeysCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetBaseKeysCountCompletedEventHandler(object sender, GetBaseKeysCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBaseKeysCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetBaseKeysCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetValueCompletedEventHandler(object sender, GetValueCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SetValueCompletedEventHandler(object sender, SetValueCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetValueTimeOutCompletedEventHandler(object sender, GetValueTimeOutCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValueTimeOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetValueTimeOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SetValueTimeOutCompletedEventHandler(object sender, SetValueTimeOutCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetValueTimeOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetValueTimeOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void RemoveKeyCompletedEventHandler(object sender, RemoveKeyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RemoveKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetAllKeysCompletedEventHandler(object sender, GetAllKeysCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllKeysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAllKeysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetAllKeysCountCompletedEventHandler(object sender, GetAllKeysCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllKeysCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAllKeysCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetCountByKeyCompletedEventHandler(object sender, GetCountByKeyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCountByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void BgSaveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetCatsFullInfoOnlineCompletedEventHandler(object sender, GetCatsFullInfoOnlineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCatsFullInfoOnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCatsFullInfoOnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetItemCatsOnlineCompletedEventHandler(object sender, GetItemCatsOnlineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemCatsOnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetItemCatsOnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetCatTopKeywordCompletedEventHandler(object sender, GetCatTopKeywordCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCatTopKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCatTopKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetCatsdataCompletedEventHandler(object sender, GetCatsdataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCatsdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCatsdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetItemInfoCacheCompletedEventHandler(object sender, GetItemInfoCacheCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemInfoCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetItemInfoCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetUserOnlineItemsCompletedEventHandler(object sender, GetUserOnlineItemsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserOnlineItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetUserOnlineItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetWordsDataCacheCompletedEventHandler(object sender, GetWordsDataCacheCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWordsDataCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetWordsDataCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetWordsSubDataCacheCompletedEventHandler(object sender, GetWordsSubDataCacheCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWordsSubDataCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetWordsSubDataCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetRelatedwordsByKeywordCompletedEventHandler(object sender, GetRelatedwordsByKeywordCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelatedwordsByKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetRelatedwordsByKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetIsOutPutInfoLogCompletedEventHandler(object sender, GetIsOutPutInfoLogCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIsOutPutInfoLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetIsOutPutInfoLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}